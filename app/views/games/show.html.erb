<html>

  <head>
    <meta charset="UTF-8">
  </head>

  <body>
    <div class="col-xs-12 col-sm-10 col-sm-offset-1">
      <div class="col-xs-10">
        <table class="table chessboard text-center"
        game_id=<%= @game.id%> current_player_id=<%= current_player.id%> >
          <% 8.downto(1).each do |row| %>
            <tr id="row-<%= row %>" class="row">
              <td class="coordinate"><%= row %></td>
              <% 1.upto(8).each do |col| %>
                <% piece = @game.pieces.active.find_by(column: col, row: row) %>
                <% unless piece %>
                  <%= render_empty_square(row, col) %>
                <% else %>
                  <%= render_piece_in_square(row, col, piece) %>
                <% end %>
              <% end %>
            </tr>
          <% end %>
          <tr class="row">
            <%= content_tag(:td, '', class: 'coordinate') %>
            <% for col in 'a'..'h' %>
              <%= content_tag(:td, col, class: 'coordinate') %>
            <% end %>
          </tr>
        </table>

        <div>
          <%= form_tag undo_move_path, method: :post do %>
            <%= submit_tag 'Undo Last Move' %>
          <% end %>
        </div>
      </div>
    </div>
  </body>
</html>

<script src="//js.pusher.com/2.2/pusher.min.js"></script>
<script>
$(function() {
  // set layer position of pieces and hovering cursor shape
  $('.contains-piece').css({zIndex: 1, cursor: 'move'});

  // make all pieces draggable
  // the pieces are inside chessboard div and square div
  $('.contains-piece').draggable();

  // handle the action of dropping a piece into a square
  var current_player_id = $('.chessboard').attr('current_player_id')
  $('.square').droppable({
    drop: function(event, ui){
      // get selected piece's and square's attributes
      var piece_div = ui.draggable;
      var square_div = $(this);
      var piece_id = piece_div.attr('id');
      var piece_info = piece_id.split('-');
      var square_id = square_div.attr('id');
      var square_info = square_id.split('-');

      // try update the piece to the new location
      $.post("/pieces/" + piece_info[1], {
        _method: "PUT",
        row: square_info[1],
        column: square_info[2],
        current_player_id: current_player_id
      });
      // reset the piece position relative to the square
      piece_div.css({left: 0, top: 0});
    }
  });

  // Add pusher event listening
  var pusher = new Pusher('<%= Pusher.key %>'); // uses your APP KEY
  var game_id = $('.chessboard').attr('game_id')
  console.log('game_channel_' + game_id)
  var channel = pusher.subscribe('game_channel_' + game_id);

  channel.bind('normal', function(data) {
    var new_square_id = '#square-' + data.piece.end_row + '-' + data.piece.end_column;
    var piece_id = '#piece-' + data.piece.id;
    var new_square_div = $(new_square_id);
    var piece_div = $(piece_id);

    if (new_square_div.text().length != 0) {
      new_square_div.children().hide();
      new_square_div.empty();
    }
    // and add the piece in
    new_square_div.append(piece_div);
  });

  channel.bind('castling', function(data) {
    var new_square_id = '#square-' + data.king.end_row + '-' + data.king.end_column;
    var king_id = '#piece-' + data.king.id;
    var new_square_div = $(new_square_id);
    var king_div = $(king_id);
    new_square_div.append(king_div);
    new_square_div.children().show();

    new_square_id = '#square-' + data.rook.end_row + '-' + data.rook.end_column;
    var rook_id = '#piece-' + data.rook.id;
    new_square_div = $(new_square_id);
    var rook_div = $(rook_id);
    new_square_div.append(rook_div);
    new_square_div.children().show();
  });

  channel.bind('refresh', function(data) {
    location.reload();
  });

  channel.bind('alert-' + current_player_id, function(message) {
    alert(message);
  });
});
</script>
